# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

import store_pb2 as store__pb2

GRPC_GENERATED_VERSION = '1.68.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in store_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class StoreServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateCustomer = channel.unary_unary(
                '/store.StoreService/CreateCustomer',
                request_serializer=store__pb2.Customer.SerializeToString,
                response_deserializer=store__pb2.CustomerResponse.FromString,
                _registered_method=True)
        self.GetCustomer = channel.unary_unary(
                '/store.StoreService/GetCustomer',
                request_serializer=store__pb2.CustomerQuery.SerializeToString,
                response_deserializer=store__pb2.Customer.FromString,
                _registered_method=True)
        self.ListCustomers = channel.unary_unary(
                '/store.StoreService/ListCustomers',
                request_serializer=store__pb2.Empty.SerializeToString,
                response_deserializer=store__pb2.CustomerListResponse.FromString,
                _registered_method=True)
        self.UpdateCustomer = channel.unary_unary(
                '/store.StoreService/UpdateCustomer',
                request_serializer=store__pb2.Customer.SerializeToString,
                response_deserializer=store__pb2.CustomerResponse.FromString,
                _registered_method=True)
        self.DeleteCustomer = channel.unary_unary(
                '/store.StoreService/DeleteCustomer',
                request_serializer=store__pb2.CustomerQuery.SerializeToString,
                response_deserializer=store__pb2.DeleteResponse.FromString,
                _registered_method=True)
        self.CreateProduct = channel.unary_unary(
                '/store.StoreService/CreateProduct',
                request_serializer=store__pb2.Product.SerializeToString,
                response_deserializer=store__pb2.ProductResponse.FromString,
                _registered_method=True)
        self.GetProduct = channel.unary_unary(
                '/store.StoreService/GetProduct',
                request_serializer=store__pb2.ProductQuery.SerializeToString,
                response_deserializer=store__pb2.Product.FromString,
                _registered_method=True)
        self.ListProducts = channel.unary_unary(
                '/store.StoreService/ListProducts',
                request_serializer=store__pb2.Empty.SerializeToString,
                response_deserializer=store__pb2.ProductListResponse.FromString,
                _registered_method=True)
        self.UpdateProduct = channel.unary_unary(
                '/store.StoreService/UpdateProduct',
                request_serializer=store__pb2.Product.SerializeToString,
                response_deserializer=store__pb2.ProductResponse.FromString,
                _registered_method=True)
        self.DeleteProduct = channel.unary_unary(
                '/store.StoreService/DeleteProduct',
                request_serializer=store__pb2.ProductQuery.SerializeToString,
                response_deserializer=store__pb2.DeleteResponse.FromString,
                _registered_method=True)
        self.UpdateInventory = channel.unary_unary(
                '/store.StoreService/UpdateInventory',
                request_serializer=store__pb2.InventoryUpdate.SerializeToString,
                response_deserializer=store__pb2.InventoryResponse.FromString,
                _registered_method=True)
        self.ListInventory = channel.unary_unary(
                '/store.StoreService/ListInventory',
                request_serializer=store__pb2.Empty.SerializeToString,
                response_deserializer=store__pb2.InventoryListResponse.FromString,
                _registered_method=True)
        self.GetInventory = channel.unary_unary(
                '/store.StoreService/GetInventory',
                request_serializer=store__pb2.ProductQuery.SerializeToString,
                response_deserializer=store__pb2.InventoryItem.FromString,
                _registered_method=True)
        self.CreateOrder = channel.unary_unary(
                '/store.StoreService/CreateOrder',
                request_serializer=store__pb2.Order.SerializeToString,
                response_deserializer=store__pb2.OrderResponse.FromString,
                _registered_method=True)
        self.GetOrder = channel.unary_unary(
                '/store.StoreService/GetOrder',
                request_serializer=store__pb2.OrderQuery.SerializeToString,
                response_deserializer=store__pb2.Order.FromString,
                _registered_method=True)
        self.ListOrders = channel.unary_unary(
                '/store.StoreService/ListOrders',
                request_serializer=store__pb2.Empty.SerializeToString,
                response_deserializer=store__pb2.OrderListResponse.FromString,
                _registered_method=True)
        self.UpdateOrderStatus = channel.unary_unary(
                '/store.StoreService/UpdateOrderStatus',
                request_serializer=store__pb2.OrderStatusUpdate.SerializeToString,
                response_deserializer=store__pb2.OrderResponse.FromString,
                _registered_method=True)


class StoreServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreateCustomer(self, request, context):
        """Customer operations
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCustomer(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListCustomers(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateCustomer(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteCustomer(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateProduct(self, request, context):
        """Product operations
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetProduct(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListProducts(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateProduct(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteProduct(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateInventory(self, request, context):
        """Inventory operations
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListInventory(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetInventory(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateOrder(self, request, context):
        """Order operations
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetOrder(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListOrders(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateOrderStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_StoreServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateCustomer': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateCustomer,
                    request_deserializer=store__pb2.Customer.FromString,
                    response_serializer=store__pb2.CustomerResponse.SerializeToString,
            ),
            'GetCustomer': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCustomer,
                    request_deserializer=store__pb2.CustomerQuery.FromString,
                    response_serializer=store__pb2.Customer.SerializeToString,
            ),
            'ListCustomers': grpc.unary_unary_rpc_method_handler(
                    servicer.ListCustomers,
                    request_deserializer=store__pb2.Empty.FromString,
                    response_serializer=store__pb2.CustomerListResponse.SerializeToString,
            ),
            'UpdateCustomer': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateCustomer,
                    request_deserializer=store__pb2.Customer.FromString,
                    response_serializer=store__pb2.CustomerResponse.SerializeToString,
            ),
            'DeleteCustomer': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteCustomer,
                    request_deserializer=store__pb2.CustomerQuery.FromString,
                    response_serializer=store__pb2.DeleteResponse.SerializeToString,
            ),
            'CreateProduct': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateProduct,
                    request_deserializer=store__pb2.Product.FromString,
                    response_serializer=store__pb2.ProductResponse.SerializeToString,
            ),
            'GetProduct': grpc.unary_unary_rpc_method_handler(
                    servicer.GetProduct,
                    request_deserializer=store__pb2.ProductQuery.FromString,
                    response_serializer=store__pb2.Product.SerializeToString,
            ),
            'ListProducts': grpc.unary_unary_rpc_method_handler(
                    servicer.ListProducts,
                    request_deserializer=store__pb2.Empty.FromString,
                    response_serializer=store__pb2.ProductListResponse.SerializeToString,
            ),
            'UpdateProduct': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateProduct,
                    request_deserializer=store__pb2.Product.FromString,
                    response_serializer=store__pb2.ProductResponse.SerializeToString,
            ),
            'DeleteProduct': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteProduct,
                    request_deserializer=store__pb2.ProductQuery.FromString,
                    response_serializer=store__pb2.DeleteResponse.SerializeToString,
            ),
            'UpdateInventory': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateInventory,
                    request_deserializer=store__pb2.InventoryUpdate.FromString,
                    response_serializer=store__pb2.InventoryResponse.SerializeToString,
            ),
            'ListInventory': grpc.unary_unary_rpc_method_handler(
                    servicer.ListInventory,
                    request_deserializer=store__pb2.Empty.FromString,
                    response_serializer=store__pb2.InventoryListResponse.SerializeToString,
            ),
            'GetInventory': grpc.unary_unary_rpc_method_handler(
                    servicer.GetInventory,
                    request_deserializer=store__pb2.ProductQuery.FromString,
                    response_serializer=store__pb2.InventoryItem.SerializeToString,
            ),
            'CreateOrder': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateOrder,
                    request_deserializer=store__pb2.Order.FromString,
                    response_serializer=store__pb2.OrderResponse.SerializeToString,
            ),
            'GetOrder': grpc.unary_unary_rpc_method_handler(
                    servicer.GetOrder,
                    request_deserializer=store__pb2.OrderQuery.FromString,
                    response_serializer=store__pb2.Order.SerializeToString,
            ),
            'ListOrders': grpc.unary_unary_rpc_method_handler(
                    servicer.ListOrders,
                    request_deserializer=store__pb2.Empty.FromString,
                    response_serializer=store__pb2.OrderListResponse.SerializeToString,
            ),
            'UpdateOrderStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateOrderStatus,
                    request_deserializer=store__pb2.OrderStatusUpdate.FromString,
                    response_serializer=store__pb2.OrderResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'store.StoreService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('store.StoreService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class StoreService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreateCustomer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/store.StoreService/CreateCustomer',
            store__pb2.Customer.SerializeToString,
            store__pb2.CustomerResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetCustomer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/store.StoreService/GetCustomer',
            store__pb2.CustomerQuery.SerializeToString,
            store__pb2.Customer.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListCustomers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/store.StoreService/ListCustomers',
            store__pb2.Empty.SerializeToString,
            store__pb2.CustomerListResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateCustomer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/store.StoreService/UpdateCustomer',
            store__pb2.Customer.SerializeToString,
            store__pb2.CustomerResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteCustomer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/store.StoreService/DeleteCustomer',
            store__pb2.CustomerQuery.SerializeToString,
            store__pb2.DeleteResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateProduct(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/store.StoreService/CreateProduct',
            store__pb2.Product.SerializeToString,
            store__pb2.ProductResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetProduct(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/store.StoreService/GetProduct',
            store__pb2.ProductQuery.SerializeToString,
            store__pb2.Product.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListProducts(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/store.StoreService/ListProducts',
            store__pb2.Empty.SerializeToString,
            store__pb2.ProductListResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateProduct(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/store.StoreService/UpdateProduct',
            store__pb2.Product.SerializeToString,
            store__pb2.ProductResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteProduct(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/store.StoreService/DeleteProduct',
            store__pb2.ProductQuery.SerializeToString,
            store__pb2.DeleteResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateInventory(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/store.StoreService/UpdateInventory',
            store__pb2.InventoryUpdate.SerializeToString,
            store__pb2.InventoryResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListInventory(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/store.StoreService/ListInventory',
            store__pb2.Empty.SerializeToString,
            store__pb2.InventoryListResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetInventory(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/store.StoreService/GetInventory',
            store__pb2.ProductQuery.SerializeToString,
            store__pb2.InventoryItem.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateOrder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/store.StoreService/CreateOrder',
            store__pb2.Order.SerializeToString,
            store__pb2.OrderResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetOrder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/store.StoreService/GetOrder',
            store__pb2.OrderQuery.SerializeToString,
            store__pb2.Order.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListOrders(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/store.StoreService/ListOrders',
            store__pb2.Empty.SerializeToString,
            store__pb2.OrderListResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateOrderStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/store.StoreService/UpdateOrderStatus',
            store__pb2.OrderStatusUpdate.SerializeToString,
            store__pb2.OrderResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
